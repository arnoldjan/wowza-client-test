{
    "version": "1.0",
    "name": "mi/wowza-client-test",
    "path-mappings": {
        "/mi/wowza-guzzle-test": "res"
    },
    "bindings": {
        "3299983f-8eb5-4c99-b4da-d2aa54f14cdb": {
            "_class": "Puli\\Discovery\\Binding\\ClassBinding",
            "class": "Mi\\WebcastManager\\Bundle\\MainBundle\\DependencyInjection\\MainPlugin",
            "type": "Matthias\\BundlePlugins\\BundlePlugin",
            "parameters": {
                "bundle-alias": "mi_webcast_manager"
            }
        },
        "ffc78259-5941-47d8-b056-0fcf0eb9e6a8": {
            "_class": "Puli\\Discovery\\Binding\\ResourceBinding",
            "query": "/mi/wowza-guzzle-test/*/service/*.xml",
            "type": "mi/service"
        }
    },
    "binding-types": {
        "mi/validation": {
            "description": "A Xml file with validation config for a class"
        }
    },
    "config": {
        "bootstrap-file": "vendor/autoload.php"
    },
    "packages": {
        "behat/behat": {
            "install-path": "vendor/behat/behat",
            "installer": "composer",
            "env": "dev"
        },
        "behat/gherkin": {
            "install-path": "vendor/behat/gherkin",
            "installer": "composer",
            "env": "dev"
        },
        "behat/mink": {
            "install-path": "vendor/behat/mink",
            "installer": "composer",
            "env": "dev"
        },
        "behat/mink-browserkit-driver": {
            "install-path": "vendor/behat/mink-browserkit-driver",
            "installer": "composer",
            "env": "dev"
        },
        "behat/mink-extension": {
            "install-path": "vendor/behat/mink-extension",
            "installer": "composer",
            "env": "dev"
        },
        "behat/mink-goutte-driver": {
            "install-path": "vendor/behat/mink-goutte-driver",
            "installer": "composer",
            "env": "dev"
        },
        "behat/symfony2-extension": {
            "install-path": "vendor/behat/symfony2-extension",
            "installer": "composer",
            "env": "dev"
        },
        "behat/transliterator": {
            "install-path": "vendor/behat/transliterator",
            "installer": "composer",
            "env": "dev"
        },
        "behatch/contexts": {
            "install-path": "vendor/behatch/contexts",
            "installer": "composer",
            "env": "dev"
        },
        "doctrine/annotations": {
            "install-path": "vendor/doctrine/annotations",
            "installer": "composer"
        },
        "doctrine/cache": {
            "install-path": "vendor/doctrine/cache",
            "installer": "composer"
        },
        "doctrine/collections": {
            "install-path": "vendor/doctrine/collections",
            "installer": "composer"
        },
        "doctrine/common": {
            "install-path": "vendor/doctrine/common",
            "installer": "composer"
        },
        "doctrine/inflector": {
            "install-path": "vendor/doctrine/inflector",
            "installer": "composer"
        },
        "doctrine/instantiator": {
            "install-path": "vendor/doctrine/instantiator",
            "installer": "composer"
        },
        "doctrine/lexer": {
            "install-path": "vendor/doctrine/lexer",
            "installer": "composer"
        },
        "fabpot/goutte": {
            "install-path": "vendor/fabpot/goutte",
            "installer": "composer",
            "env": "dev"
        },
        "friendsofsymfony/rest-bundle": {
            "install-path": "vendor/friendsofsymfony/rest-bundle/FOS/RestBundle",
            "installer": "composer",
            "env": "dev"
        },
        "guzzlehttp/guzzle": {
            "install-path": "vendor/guzzlehttp/guzzle",
            "installer": "composer"
        },
        "guzzlehttp/promises": {
            "install-path": "vendor/guzzlehttp/promises",
            "installer": "composer"
        },
        "guzzlehttp/psr7": {
            "install-path": "vendor/guzzlehttp/psr7",
            "installer": "composer"
        },
        "incenteev/composer-parameter-handler": {
            "install-path": "vendor/incenteev/composer-parameter-handler",
            "installer": "composer"
        },
        "ircmaxell/password-compat": {
            "install-path": "vendor/ircmaxell/password-compat",
            "installer": "composer"
        },
        "jms/metadata": {
            "install-path": "vendor/jms/metadata",
            "installer": "composer"
        },
        "jms/parser-lib": {
            "install-path": "vendor/jms/parser-lib",
            "installer": "composer"
        },
        "jms/serializer": {
            "install-path": "vendor/jms/serializer",
            "installer": "composer"
        },
        "jms/serializer-bundle": {
            "install-path": "vendor/jms/serializer-bundle/JMS/SerializerBundle",
            "installer": "composer"
        },
        "justinrainbow/json-schema": {
            "install-path": "vendor/justinrainbow/json-schema",
            "installer": "composer"
        },
        "matthiasnoback/symfony-bundle-plugins": {
            "install-path": "vendor/matthiasnoback/symfony-bundle-plugins",
            "installer": "composer"
        },
        "mi/metadata-puli-file-locator": {
            "install-path": "vendor/mi/metadata-puli-file-locator",
            "installer": "composer"
        },
        "mi/puli-metadata-file-locator-bundle": {
            "install-path": "vendor/mi/puli-metadata-file-locator-bundle",
            "installer": "composer"
        },
        "mi/symfony-puli-bundle-plugins": {
            "install-path": "vendor/mi/symfony-puli-bundle-plugins",
            "installer": "composer"
        },
        "mi/wowza-guzzle-client": {
            "install-path": "vendor/mi/wowza-guzzle-client",
            "installer": "composer"
        },
        "monolog/monolog": {
            "install-path": "vendor/monolog/monolog",
            "installer": "composer"
        },
        "nelmio/cors-bundle": {
            "install-path": "vendor/nelmio/cors-bundle",
            "installer": "composer"
        },
        "padraic/humbug_get_contents": {
            "install-path": "vendor/padraic/humbug_get_contents",
            "installer": "composer"
        },
        "padraic/phar-updater": {
            "install-path": "vendor/padraic/phar-updater",
            "installer": "composer"
        },
        "paragonie/random_compat": {
            "install-path": "vendor/paragonie/random_compat",
            "installer": "composer"
        },
        "phpcollection/phpcollection": {
            "install-path": "vendor/phpcollection/phpcollection",
            "installer": "composer"
        },
        "phpoption/phpoption": {
            "install-path": "vendor/phpoption/phpoption",
            "installer": "composer"
        },
        "psr/http-message": {
            "install-path": "vendor/psr/http-message",
            "installer": "composer"
        },
        "psr/log": {
            "install-path": "vendor/psr/log",
            "installer": "composer"
        },
        "puli/cli": {
            "install-path": "vendor/puli/cli",
            "installer": "composer"
        },
        "puli/composer-plugin": {
            "install-path": "vendor/puli/composer-plugin",
            "installer": "composer"
        },
        "puli/discovery": {
            "install-path": "vendor/puli/discovery",
            "installer": "composer"
        },
        "puli/manager": {
            "install-path": "vendor/puli/manager",
            "installer": "composer"
        },
        "puli/repository": {
            "install-path": "vendor/puli/repository",
            "installer": "composer"
        },
        "puli/symfony-bridge": {
            "install-path": "vendor/puli/symfony-bridge",
            "installer": "composer"
        },
        "puli/symfony-bundle": {
            "install-path": "vendor/puli/symfony-bundle",
            "installer": "composer"
        },
        "puli/url-generator": {
            "install-path": "vendor/puli/url-generator",
            "installer": "composer"
        },
        "ramsey/uuid": {
            "install-path": "vendor/ramsey/uuid",
            "installer": "composer"
        },
        "seld/jsonlint": {
            "install-path": "vendor/seld/jsonlint",
            "installer": "composer"
        },
        "sensio/distribution-bundle": {
            "install-path": "vendor/sensio/distribution-bundle",
            "installer": "composer"
        },
        "sensio/framework-extra-bundle": {
            "install-path": "vendor/sensio/framework-extra-bundle",
            "installer": "composer"
        },
        "sensiolabs/security-checker": {
            "install-path": "vendor/sensiolabs/security-checker",
            "installer": "composer"
        },
        "symfony/monolog-bundle": {
            "install-path": "vendor/symfony/monolog-bundle",
            "installer": "composer"
        },
        "symfony/polyfill-apcu": {
            "install-path": "vendor/symfony/polyfill-apcu",
            "installer": "composer"
        },
        "symfony/polyfill-intl-icu": {
            "install-path": "vendor/symfony/polyfill-intl-icu",
            "installer": "composer"
        },
        "symfony/polyfill-mbstring": {
            "install-path": "vendor/symfony/polyfill-mbstring",
            "installer": "composer"
        },
        "symfony/polyfill-php54": {
            "install-path": "vendor/symfony/polyfill-php54",
            "installer": "composer"
        },
        "symfony/polyfill-php55": {
            "install-path": "vendor/symfony/polyfill-php55",
            "installer": "composer"
        },
        "symfony/polyfill-php56": {
            "install-path": "vendor/symfony/polyfill-php56",
            "installer": "composer"
        },
        "symfony/polyfill-php70": {
            "install-path": "vendor/symfony/polyfill-php70",
            "installer": "composer"
        },
        "symfony/polyfill-util": {
            "install-path": "vendor/symfony/polyfill-util",
            "installer": "composer"
        },
        "symfony/security-acl": {
            "install-path": "vendor/symfony/security-acl",
            "installer": "composer"
        },
        "symfony/symfony": {
            "install-path": "vendor/symfony/symfony",
            "installer": "composer"
        },
        "twig/twig": {
            "install-path": "vendor/twig/twig",
            "installer": "composer"
        },
        "webmozart/assert": {
            "install-path": "vendor/webmozart/assert",
            "installer": "composer"
        },
        "webmozart/console": {
            "install-path": "vendor/webmozart/console",
            "installer": "composer"
        },
        "webmozart/expression": {
            "install-path": "vendor/webmozart/expression",
            "installer": "composer"
        },
        "webmozart/glob": {
            "install-path": "vendor/webmozart/glob",
            "installer": "composer"
        },
        "webmozart/json": {
            "install-path": "vendor/webmozart/json",
            "installer": "composer"
        },
        "webmozart/path-util": {
            "install-path": "vendor/webmozart/path-util",
            "installer": "composer"
        },
        "willdurand/jsonp-callback-validator": {
            "install-path": "vendor/willdurand/jsonp-callback-validator",
            "installer": "composer",
            "env": "dev"
        },
        "willdurand/negotiation": {
            "install-path": "vendor/willdurand/negotiation",
            "installer": "composer",
            "env": "dev"
        }
    }
}
